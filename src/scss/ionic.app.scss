/*
To customize the look and feel of Ionic, you can override the variables
in ionic's _variables.scss file.

For example, you might change some of the default colors:

$light:                           #fff !default;
$stable:                          #f8f8f8 !default;
$positive:                        #387ef5 !default;
$calm:                            #11c1f3 !default;
$balanced:                        #33cd5f !default;
$energized:                       #ffc900 !default;
$assertive:                       #ef473a !default;
$royal:                           #886aea !default;
$dark:                            #444 !default;
*/
/* Color Variables */
$charcoal: #292627;
$pink: #ff2267;
$gray: #e6e7e8; /* Theme Variables */
$base-background-color: $charcoal;
$base-font-color: $gray;
$base-muted-color: rgba(230, 231, 232, 0.25); // The path for our ionicons font files, relative to the built CSS in www/css
$ionicons-font-path: "../lib/ionic/fonts" !default; // Include all of Ionic
@import "www/lib/ionic/scss/ionic"; //custom scss
/* Mixins */
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
@mixin rotate-downwards {
  transform: rotate(90deg);
  transform-origin: center;
}
@mixin rotate-upwards {
  transform: translateY(100%) rotate(-90deg);
}
/* Animations */
@keyframes bounce {
  0% {
    transform: scale(1);
  }

  33% {
    transform: scale(0.9);
  }

  66% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}
/* Component Styles - Steps */

.steps {
  @include rotate-downwards;
  display: flex;
  width: 100%;
  margin: 0;
  padding: 0 0 2rem;
  list-style: none;
}

.step {
  @include flex-center;
  flex-direction: column;
  flex: 1;
  position: relative;
  padding: 0 1.5rem;
  pointer-events: none;

  &--active,
  &--complete {
    cursor: pointer;
    pointer-events: all;
  }

  &:not(:last-child) {
    &:after,
    &:before {
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      height: 0.25rem;
      content: '';
      transform: translateY(-50%);
      will-change: width;
      z-index: -1;
    }
  }

  &:before {
    width: 100%;
    background-color: $base-muted-color;
  }

  &:after {
    width: 0;
    background-color: $pink;
  }

  &--complete {
    &:after {
      width: 100% !important;
      opacity: 1;
      transition: width 0.6s ease-in-out, opacity 0.6s ease-in-out;
    }
  }
}

.step__icon {
  @include flex-center;
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  background-color: $base-background-color;
  border: 0.25rem solid $base-muted-color;
  border-radius: 50%;
  color: transparent;
  font-size: 2rem;

  &:before {
    display: block;
    content: '\2713';
  }

  .step--complete.step--active & {
    color: #fff;
    transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out, color 0.3s ease-in-out;
  }

  .step--incomplete.step--active & {
    border-color: $pink;
    transition-delay: 0.5s;
  }

  .step--complete & {
    animation: bounce 0.5s ease-in-out;
    background-color: $pink;
    border-color: $pink;
    color: #fff;
  }
}

.step__label {
  @include rotate-upwards;
  position: absolute;
  bottom: -2rem;
  margin-top: 1rem;
  font-size: 0.8rem;
  width: 20rem;
  text-transform: uppercase;

  .step--incomplete.step--inactive & {
    color: #fff;
  }

  .step--incomplete.step--active & {
    color: #fff;
  }

  .step--active & {
    transition: color 0.3s ease-in-out;
    transition-delay: 0.5s;
  }
}
